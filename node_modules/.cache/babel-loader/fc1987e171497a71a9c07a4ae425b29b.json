{"ast":null,"code":"import _regeneratorRuntime from\"/media/devdeadviz/1AAA83FAAA83D125/Projects/firegram-photo-gallery-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/media/devdeadviz/1AAA83FAAA83D125/Projects/firegram-photo-gallery-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/media/devdeadviz/1AAA83FAAA83D125/Projects/firegram-photo-gallery-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import{projectStorage,projectFirestore,timeStamp}from\"../firebase/config\";var useStorage=function useStorage(file){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),progress=_useState2[0],setProgress=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),url=_useState6[0],setUrl=_useState6[1];useEffect(function(){//references\nvar storageRef=projectStorage.ref(file.name);var collectionRef=projectFirestore.collection(\"images\");/* asynchronous - it takes some time to complete \n    we put a listener which which be called several times and a function attached to it.*/storageRef.put(file).on(\"state_changed\",function(snap){var percentage=snap.bytesTransferred/snap.totalBytes*100;setProgress(percentage);},function(err){setError(err);},/*#__PURE__*/ //asynchronous function with await\n_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return storageRef.getDownloadURL();case 2:url=_context.sent;//adding images collection to database so that later we can show it on frontend.\ncreatedAt=timeStamp();collectionRef.add({url:url,createdAt:createdAt});setUrl(url);case 6:case\"end\":return _context.stop();}}},_callee);})));},[file]);return{progress:progress,url:url,error:error};};export default useStorage;","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/firegram-photo-gallery-app/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","timeStamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add"],"mappings":"wcAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OACEC,cADF,CAEEC,gBAFF,CAGEC,SAHF,KAIO,oBAJP,CAMA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,eACKN,QAAQ,CAAC,CAAD,CADb,wCACpBO,QADoB,eACVC,WADU,8BAEDR,QAAQ,CAAC,IAAD,CAFP,yCAEpBS,KAFoB,eAEbC,QAFa,8BAGLV,QAAQ,CAAC,IAAD,CAHH,yCAGpBW,GAHoB,eAGfC,MAHe,eAK3BX,SAAS,CAAC,UAAM,CACd;AACA,GAAMY,CAAAA,UAAU,CAAGX,cAAc,CAACY,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB,CACA,GAAMC,CAAAA,aAAa,CAAGb,gBAAgB,CAACc,UAAjB,CAA4B,QAA5B,CAAtB,CAEA;AACJ,0FACIJ,UAAU,CAACK,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CACE,eADF,CAEE,SAACC,IAAD,CAAU,CACR,GAAIC,CAAAA,UAAU,CAAID,IAAI,CAACE,gBAAL,CAAwBF,IAAI,CAACG,UAA9B,CAA4C,GAA7D,CACAf,WAAW,CAACa,UAAD,CAAX,CACD,CALH,CAME,SAACG,GAAD,CAAS,CACPd,QAAQ,CAACc,GAAD,CAAR,CACD,CARH,eAUE;AAVF,wDAWE,2KACoBX,CAAAA,UAAU,CAACY,cAAX,EADpB,QACQd,GADR,eAGE;AACMe,SAJR,CAIoBtB,SAAS,EAJ7B,CAKEY,aAAa,CAACW,GAAd,CAAkB,CAAEhB,GAAG,CAAHA,GAAF,CAAOe,SAAS,CAATA,SAAP,CAAlB,EACAd,MAAM,CAACD,GAAD,CAAN,CANF,sDAXF,IAoBD,CA3BQ,CA2BN,CAACL,IAAD,CA3BM,CAAT,CA6BA,MAAO,CAAEC,QAAQ,CAARA,QAAF,CAAYI,GAAG,CAAHA,GAAZ,CAAiBF,KAAK,CAALA,KAAjB,CAAP,CACD,CAnCD,CAqCA,cAAeJ,CAAAA,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  projectStorage,\n  projectFirestore,\n  timeStamp,\n} from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    //references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection(\"images\");\n\n    /* asynchronous - it takes some time to complete \n    we put a listener which which be called several times and a function attached to it.*/\n    storageRef.put(file).on(\n      \"state_changed\",\n      (snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n\n      //asynchronous function with await\n      async () => {\n        const url = await storageRef.getDownloadURL();\n\n        //adding images collection to database so that later we can show it on frontend.\n        const createdAt = timeStamp();\n        collectionRef.add({ url, createdAt });\n        setUrl(url);\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;\n"]},"metadata":{},"sourceType":"module"}